{"ast":null,"code":"var _jsxFileName = \"/Users/adel/Documents/Full Stack Developer/React/React201/moviebrowser/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport AboutView from \"./components/AboutView\";\nimport { Routes, Route } from \"react-router-dom\";\n// import SearchView from \"./components/SearchView\"\nimport { useState, useEffect } from \"react\";\nimport MovieView from \"./components/MovieView\";\nimport NotFound from \"./components/NotFound\";\nimport Search from \"./components/Search\";\nimport NavBar2 from \"./components/Navbar2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  useEffect(() => {\n    if (searchText) {\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=f06e799237d5a0a2f66c86b622aca3f8&language=en-US&query=${searchText}&page=1&include_adult=false\n  `).then(response => response.json()).then(data => {\n        setSearchResults(data.results);\n      });\n    }\n  }, [searchText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar2, {\n      searchText: searchText,\n      setSearchText: setSearchText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(AboutView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        element: /*#__PURE__*/_jsxDEV(Search, {\n          keyword: searchText,\n          searchResults: searchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/movies/:id\",\n        element: /*#__PURE__*/_jsxDEV(MovieView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xIWKj64jvbaDGFDELONGu+6b49Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Home","AboutView","Routes","Route","useState","useEffect","MovieView","NotFound","Search","NavBar2","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","searchText","setSearchText","fetch","then","response","json","data","results","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","keyword","_c","$RefreshReg$"],"sources":["/Users/adel/Documents/Full Stack Developer/React/React201/moviebrowser/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport AboutView from \"./components/AboutView\";\nimport { Routes, Route } from \"react-router-dom\";\n// import SearchView from \"./components/SearchView\"\nimport { useState, useEffect } from \"react\";\nimport MovieView from \"./components/MovieView\"\nimport NotFound from \"./components/NotFound\"\nimport Search from \"./components/Search\";\nimport NavBar2 from \"./components/Navbar2\";\n\nfunction App() {\n\n\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(()=>{\n    if(searchText)\n    {\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=f06e799237d5a0a2f66c86b622aca3f8&language=en-US&query=${searchText}&page=1&include_adult=false\n  `)\n      .then(response=>response.json())\n      .then(data => {\n        setSearchResults(data.results)\n      })\n\n    }\n  },[searchText])\n  \n  return (\n    <div>\n      <NavBar2 searchText={searchText} setSearchText = {setSearchText} />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/about\" element={<AboutView />} />\n        <Route \n        path=\"/search\" \n        element={<Search keyword={searchText} searchResults={searchResults} />}\n        />\n        <Route path=\"/movies/:id\" element={<MovieView />}/>\n        <Route path=\"*\" element={<NotFound />} />\n        {/* <Route component={NotFound} /> */}\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}